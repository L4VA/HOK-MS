// 颜色
$colors: (
  'primary': #db9e3f,
  'info':#4b67af,
  "white":#fff,
  "light" : #f9f9f9,
  "light-1" : #d4d9de,
  "grey" :#999,
  "grey-1" :#666,
  "dark-1":#343440,
  "dark" :#222,
  "black" :#000,
  'blue':#4394e4,
  'danger':rgb(221, 0, 27)
);

@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color
  }

  .bg-#{$colorKey} {
    background-color: $color
  }
}

// 边框
$border-color: map-get($map: $colors, $key: light-1);


// 字体
// 文字位置
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

// 文字大小
$base-font-size: 13px;
$font-sizes: (
  xxs:.6154,
  //8.0002px
  xs:.7692,
  //9.9996px
  sm:.923,
  //12.0003px
  md:1,
  //13px
  lg:1.07,
  //13.9997px
  xl:1.2308 //16.0004px
);

@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

// 文字单行显示
.text-ellipse {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}


// width,height
.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}


// flex布局
.d-flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap
}

// 对齐方式
$flex-jc: (
  start:flex-start,
  end:flex-end,
  center:center,
  between:space-between,
  around:space-around
);

@each $jcKey,
$jc in $flex-jc {
  .jc-#{$jcKey} {
    justify-content: $jc;
  }
}

$flex-ai: (
  start:flex-start,
  end:flex-end,
  center:center,
  stretch:stretch
);

@each $aiKey,
$ai in $flex-ai {
  .ai-#{$aiKey} {
    align-items: $ai;
  }
}

// 自动占满（增大或缩小）剩余空间
.flex-1 {
  flex: 1
}

// 自动撑满（只增大）剩余空间
.flex-grow-1 {
  flex-grow: 1
}


// 定义边距
$spacing-types: (
  m:margin,
  p:padding
);
$spacing-directions: (
  t:top,
  r:right,
  b:bottom,
  l:left
);
$spacing-base-size: 1rem;
$spacing-sizes: (
  0:0,
  1:0.25,
  2:0.5,
  3:1,
  4:1.5,
  5:3
);

@each $typeKey,
$type in $spacing-types {

  // m-1
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size
    }
  }

  // mt-1 
  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size
      }
    }
  }

  // mx-1 
  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}x-#{$sizeKey} {
        #{$type}-left: $size * $spacing-base-size;
        #{$type}-right: $size * $spacing-base-size
      }
    }
  }

  // my-1 
  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}y-#{$sizeKey} {
        #{$type}-top: $size * $spacing-base-size;
        #{$type}-bottom: $size * $spacing-base-size
      }
    }
  }
}


// 边框border
@each $dir in (top, right, bottom, left) {
  .border-#{$dir} {
    border-#{$dir}: 1px solid $border-color
  }
}


* {
  box-sizing: border-box;
  outline: none;
}

html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial,
    Helvetica,
    sans-serif;
  line-height: 1.2em;
  background: #f1f1f1
}

a {
  color: #999
}

p {
  line-height: 1.5rem
}

// button
.btn {
  border: none;
  border-radius: .1538rem;
  font-size: map-get($font-sizes, 'sm') * $base-font-size;
  padding: .2rem .6rem;
}

// nav
.nav {
  display: flex;


  .nav-item {
    border-bottom: 3.0004px solid transparent;
    padding-bottom: .2rem;
    color: map-get($map: $colors, $key: 'primary');

    &.active {
      border-bottom: 3.0004px solid map-get($map: $colors, $key: 'primary');
    }

  }

  &.nav-inverse {
    .nav-item {
      color: map-get($map: $colors, $key: 'white');

      &.active {
        border-bottom: 3.0004px solid map-get($map: $colors, $key: 'white');
      }
    }


  }
}